name: build
on: pull_request

env:
  IMAGE_NAME: vvgo

jobs:
  vvgo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          CACHE_FROM=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          docker pull $CACHE_FROM:latest-builder || true
          docker pull $CACHE_FROM:latest || true

          docker build . \
            --file Dockerfile \
            --target builder \
            --cache-from=$CACHE_FROM:latest-builder \
            --tag builder

          docker build . \
            --file Dockerfile \
            --target vvgo \
            --cache-from=$CACHE_FROM:latest-builder \
            --cache-from=$CACHE_FROM:latest \
            --tag artifact

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        shell: bash
        run: |
          set -x
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag builder $IMAGE_ID:$VERSION-builder
          docker tag artifact $IMAGE_ID:$VERSION
          docker tag artifact $IMAGE_ID:${{ github.base_ref }}
          docker tag artifact $IMAGE_ID:${{ github.base_ref }}-$VERSION
          docker push $IMAGE_ID:$VERSION-builder
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:${{ github.base_ref }}
          docker push $IMAGE_ID:${{ github.base_ref }}-$VERSION
